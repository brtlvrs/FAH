---
#
# for the function of tags run
# >ansible-playbook playbook-FAH.yaml --tags help 
#

#-- 
- name: display custom variables
  #-- debug task to display custom created variables
  tags:
  - always
  debug:
    var: "{{ item }}"
    verbosity: 1
  loop:  
  - ansible_facts
  - _rule
  - fah


- name: "find Folding@Home container: {{fah.fullname}}"
  #-- Check if Folding@Home container exists
  tags:
    - run
    - rm_container
    - rm_image
    - stop
    - build
    - clean_run
  docker_container_info:
    name: "{{fah.fullname}}"
  register: fah_container

- name: "stop Folding@Home container: {{fah.fullname}}"
  tags:
    - rm_container
    - rm_image
    - stop
    - clean_run
  docker_container:
    name: "{{fah.fullname}}"
    state: stopped
  when: fah_container.exists

- name: "remove Folding@Home container: {{fah.fullname}}"
  tags:
    - rm_container
    - rm_image
    - build
    - run
  when: fah_container.exists
  docker_container:
    name: "{{fah.fullname}}"
    state: absent

- name: "remove Folding@Home container incl. volume: {{fah.fullname}}"
  tags:
    - never #only run task when tags are explicity given 
    - rm_all
    - clean_run
  when: fah_container.exists
  docker_container:
    name: "{{fah.fullname}}"
    state: absent
    keep_volumes: "no"

- name: "remove Folding@Home docker image: {{fah.fullname}}:{{fah.tag}}" 
  tags:
    - rm_image
    - run
    - buid
    - rm_all
  docker_image:
    name: "{{fah.fullname}}" 
    tag: "{{fah.tag}}" 
    state: absent


- name: check build folder
  tags:
    - never
    - build
    - run 
    - archive
  file:
    path: "{{fah.docker.image.build.path}}"
    state: directory
    mode: '0755'

- name: "check dockerhub folder {{fah.dockerhub.path}}"
  tags:
    - never
    - dockerhub
  file:
    path: "{fah.dockerhub.path}}"
    state: directory
    mode: '0755'

- name: bugfix 'invalid selinux context' - for dockerhub files
  tags:
    - never
    - dockerhub
  file:
    path:  "{{fah.dockerhub.path}}/{{item}}"
    state: touch
  loop:
    - dockerfile
    - config.xml

- name: templating dockerfile for dockerhub
  tags:
    - never
    - dockerhub
  template:
    src: "{{item}}.j2"
    dest: "{{fah.dockerhub.path}}/{{item}}"
  loop:
    - dockerfile
    - config.xml

- name: bugfix 'invalid selinux context' - create config.xml
  tags:
    - never
    - build
    - run
    - archive
  file:
    path:  "{{fah.docker.image.build.path}}/config.xml"
    state: touch

- name: templating build content
  tags:
    - Archive
    - build
    - run
  template:
    src: "{{item}}.j2"
    dest: "{{fah.docker.image.build.path}}/{{item}}"
  loop:
    - config.xml
    - dockerfile


- name: "build Folding@Home docker image: {{fah.fullname}}:{{fah.tag}}" 
  tags:
    - build
    - run
    - Archive
  docker_image:
    build:
      pull: "false"
      path: "{{fah.docker.image.build.path}}"
    source: build
    name: "{{fah.fullname}}" 
    tag: "{{fah.tag}}" 
    push: false

- name: "run Folding@home container: {{fah.fullname}} from image: {{fah.fullname}}:{{fah.tag}}" 
  tags:
    - run
    - run_only
    - clean_run
  docker_container:
    name: "{{fah.fullname}}"
    image: "{{fah.fullname}}:{{fah.tag}}"
    domainname: shire.loc
    state: started
    cleanup: yes
    cpu_shares: "{{fah.docker.container.cpu.shares}}"
    memory: "{{fah.docker.container.mem.memory}}"
    memory_swap:  "{{fah.docker.container.mem.memory_swap}}"
#    networks: 
#      - name: bridge
    ports: 
      - "{{fah.docker.container.ipv4}}:{{fah.docker.container.web_port}}:7396/tcp"
      - "{{fah.docker.container.ipv4}}:{{fah.docker.container.control_port}}:36330/tcp"
    restart_policy: "unless-stopped"
    volumes:
      - "{{fah.fullname}}:/opt/fahclient/"
      - "{{fah.name}}_work:/opt/fahclient/work/"

- name: "create archiving location: {{fah.docker.image.archive.path}}"
  tags:
    - never
    - archive 
    - archive_only
  file:
    path: "{{fah.docker.image.archive.path}}"
    state: directory
    mode: '0755'

- name: "Archive / export dockerimage to: {{fah.docker.image.archive.path}}/{{fah.fullname}}-{{fah.tag}}.tar"
  tags:
    - never
    - archive 
    - archive_only
  docker_image:
    name: "{{fah.fullname}}"
    source: local  
    tag: "{{fah.tag}}"
    archive_path: "{{fah.docker.image.archive.path}}/{{fah.fullname}}-{{fah.tag}}.tar"

- name: Remove build folder and its content
  tags:
    - always
  file:
    path:  "{{playbook_dir}}/build"
    state: absent

- name: help
  tags:
    - never
    - help
  debug:
    var:
      help